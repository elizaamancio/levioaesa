import numpy as np
import pylab as plt


goal = 14

# map cell to cell, add circular cell to goal point

points_list = [(1,0),
(3,0),
(6,0),
(0,1),
(2,1),
(3,1),
(4,1),
(6,1),
(0,2),
(1,2),
(6,2),
(0,3),
(1,3),
(4,3),
(6,3),
(3,4),
(6,4),
(8,5),
(10,5),
(0,6),
(1,6),
(2,6),
(3,6),
(4,6),
(0,7),
(5,7),
(6,7),
(10,8),
(11,9),
(12,9),
(13,9),
(5,10),
(8,10),
(9,10),
(11,10),
(12,10),
(13,10),
(12,11),
(13,11),
(11,12),
(13,12),
(9,13),
(11,13),
(8,14),
(9,14),
(10,14),
(11,14),
(12,14),
(13,14),
(7,15),
(9,15),
(11,15),
(12,15),
(13,15)]

# how many points in graph? x points
MATRIX_SIZE = 16


# create matrix x*y
R = np.matrix(np.ones(shape=(MATRIX_SIZE, MATRIX_SIZE)))
R *= -1

R[(1,0)] = 1
R[(3,0)] = 1
R[(6,0)] = 1
R[(0,1)] = 1
R[(2,1)] = 1
R[(3,1)] = 1
R[(4,1)] = 1
R[(6,1)] = 1
R[(0,2)] = 1
R[(1,2)] = 1
R[(6,2)] = 1
R[(0,3)] = 1
R[(1,3)] = 1
R[(4,3)] = 1
R[(6,3)] = 1
R[(3,4)] = 1
R[(6,4)] = 1
R[(8,5)] = 1
R[(10,5)] = 1
R[(0,6)] = 1
R[(1,6)] = 1
R[(2,6)] = 1
R[(3,6)] = 1
R[(4,6)] = 1
R[(0,7)] = 1
R[(5,7)] = 1
R[(6,7)] = 1
R[(10,8)] = 1
R[(11,9)] = 1
R[(12,9)] = 1
R[(13,9)] = 1
R[(5,10)] = 1
R[(8,10)] = 1
R[(9,10)] = 1
R[(11,10)] = 1
R[(12,10)] = 1
R[(13,10)] = 1
R[(12,11)] = 1
R[(13,11)] = 1
R[(11,12)] = 1
R[(13,12)] = 1
R[(9,13)] = 1
R[(11,13)] = 1
R[(8,14)] = 1
R[(9,14)] = 1
R[(10,14)] = 1
R[(11,14)] = 1
R[(12,14)] = 1
R[(13,14)] = 1
R[(7,15)] = 1
R[(9,15)] = 1
R[(11,15)] = 1
R[(12,15)] = 1
R[(13,15)] = 1
R[(14,15)] = 1
R[(7,15)] = 1
R[(15,14)] = 1


# assign zeros to paths and 200 to goal-reaching point


for point in points_list:
    print(point)
    if point[1] == goal:
        R[point] = 200

    if point[0] == goal:
        R[point[::-1]] = 200

# add goal point round trip
#R[goal,goal]= 500

print (R)
